description = "Rate limit configuration for Spring Cloud Netflix Zuul - Core"

dependencies {
    compile group: "org.springframework.cloud", name: "spring-cloud-starter-zuul"

    compileOnly group: "org.springframework.boot", name: "spring-boot-autoconfigure-processor"
    compileOnly group: "org.springframework.boot", name: "spring-boot-configuration-processor"
    compileOnly group: "org.springframework.boot", name: "spring-boot-starter-data-redis"
    compileOnly group: "org.springframework.cloud", name: "spring-cloud-starter-consul"
    compileOnly group: "org.springframework.boot", name: "spring-boot-starter-data-jpa"
    compileOnly group: "org.springframework.boot", name: "spring-boot-starter-security"

    testCompile group: "org.springframework.boot", name: "spring-boot-starter-data-redis"
    testCompile group: "org.springframework.cloud", name: "spring-cloud-starter-consul"
    testCompile group: "org.springframework.boot", name: "spring-boot-starter-data-jpa"
    testCompile group: "org.springframework.boot", name: "spring-boot-starter-security"
    testCompile group: "org.springframework.security", name: "spring-security-test"

    compileOnly group: "com.github.vladimir-bukhtoyarov", name: "bucket4j-core", version: "${bucket4j_version}"
    compileOnly group: "com.github.vladimir-bukhtoyarov", name: "bucket4j-jcache", version: "${bucket4j_version}"
    compileOnly group: "com.github.vladimir-bukhtoyarov", name: "bucket4j-hazelcast", version: "${bucket4j_version}"
    compileOnly group: "com.github.vladimir-bukhtoyarov", name: "bucket4j-ignite", version: "${bucket4j_version}"
    compileOnly group: "com.github.vladimir-bukhtoyarov", name: "bucket4j-infinispan", version: "${bucket4j_version}"

    testCompile group: "com.github.vladimir-bukhtoyarov", name: "bucket4j-core", version: "${bucket4j_version}"
    testCompile group: "com.github.vladimir-bukhtoyarov", name: "bucket4j-jcache", version: "${bucket4j_version}"
    testCompile group: "com.github.vladimir-bukhtoyarov", name: "bucket4j-hazelcast", version: "${bucket4j_version}"
    testCompile group: "com.github.vladimir-bukhtoyarov", name: "bucket4j-ignite", version: "${bucket4j_version}"
    testCompile group: "com.github.vladimir-bukhtoyarov", name: "bucket4j-infinispan", version: "${bucket4j_version}"

    compileOnly group: "javax.cache", name: "cache-api", version: "${javax_cache_version}"
    compileOnly group: "com.hazelcast", name: "hazelcast", version: "${hazelcast_version}"
    compileOnly group: "org.apache.ignite", name: "ignite-core", version: "${ignite_version}"
    compileOnly group: "org.infinispan", name: "infinispan-core", version: "${infinispan_version}"
    compileOnly group: "org.infinispan", name: "infinispan-commons", version: "${infinispan_version}"

    testCompile group: "javax.cache", name: "cache-api", version: "${javax_cache_version}"
    testCompile group: "com.hazelcast", name: "hazelcast", version: "${hazelcast_version}"
    testCompile group: "org.apache.ignite", name: "ignite-core", version: "${ignite_version}"
    testCompile group: "org.infinispan", name: "infinispan-core", version: "${infinispan_version}"
    testCompile group: "org.infinispan", name: "infinispan-commons", version: "${infinispan_version}"
}

apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "lchayoun"
            name "Liel Chayoun"
            email "lchayoun@gmail.com"
        }
    }

    scm {
        url "https://github.com/swce/spring-cloud-zuul-ratelimit"
    }
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            groupId 'com.github.swce'
            artifactId 'spring-cloud-zuul-ratelimit'
            version '1.5.0'
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Rate limit strategy for Spring Cloud Netflix')
                root.appendNode('name', 'Spring Zuul Rate Limit')
                root.appendNode('url', 'https://github.com/swce/spring-cloud-zuul-ratelimit')
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['mavenPublication']
    pkg {
        repo = 'spring-cloud-zuul-ratelimit'
        name = 'spring-cloud-zuul-ratelimit'
        userOrg = 'swce'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/SWCE/spring-cloud-zuul-ratelimit.git'
    }
    version {
        name = '1.5.0'
        desc = 'Rate limit strategy for Spring Cloud Netflix Zuul'
        released  = new Date()
    }
}
